variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -Penv"

# This template uses jdk8 for verifying and deploying images
image: maven:3.3.9-jdk-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - build
  - release
  - demo

build:
  stage: build
  tags: ["build"]
  script:
    - 'mvn $MAVEN_CLI_OPTS deploy -s /tmp/settings.xml '
  artifacts:
    paths:
    - edatos-external-users-internal-web/target/*.war
    - edatos-external-users-external-web/target/*.war
  only:
    - develop

release:
  stage: release
  tags: ["build"]
  script:
    - git config --global user.email "sistemas@arte-consultores.com"
    - git config --global user.name "arte"
    - git checkout -B "$CI_BUILD_REF_NAME"
    - if [[ -n "$RELEASE_VERSION" ]] ;
      then
        mvn -DreleaseVersion=$RELEASE_VERSION -Dresume=false release:prepare release:perform -Penv -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
      else
        mvn -Dresume=false release:prepare release:perform -Penv -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
      fi
  artifacts:
    paths:
    - edatos-external-users-internal-web/target/*.war
    - edatos-external-users-external-web/target/*.war
  only:
    - master
  when: manual

# ######################################################################################
# DEMO
# ######################################################################################
deploy all:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/internal/deploy.sh $RESTART
        - bash ./etc/deploy/scripts/demo/external/deploy.sh $RESTART
    when: manual
    
deploy internal:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/internal/deploy.sh $RESTART
    when: manual
    
deploy external:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/external/deploy.sh $RESTART
    when: manual

stop all servers:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/internal/server.sh stop edatos-internal01
        - bash ./etc/deploy/scripts/demo/external/server.sh stop edatos-external01
    when: manual

start all servers:
    stage: demo
    script:
        - bash ./etc/deploy/scripts/demo/internal/server.sh start edatos-internal01
        - bash ./etc/deploy/scripts/demo/external/server.sh start edatos-external01
    when: manual

# ######################################################################################
# PRE
# ######################################################################################

# Work in progress

# ######################################################################################
# PRO
# ######################################################################################    

# Work in progress
